import groovy.json.JsonSlurper

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 29

    def versionFile = file('../../../lerna.json')
    def parsedVersion = new JsonSlurper().parseText(versionFile.text)
    project.version = parsedVersion.version.toString()

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            testCoverageEnabled true
        }
    }

    sourceSets {
        androidTest {
            assets.srcDirs += ['../../../packages/test-www/dist', '../../../packages/nimbus-bridge/dist/iife']
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    androidTestImplementation project(":annotations")
    androidTestImplementation(Libs.k2v8)
    androidTestImplementation project(":bridge-v8")
    androidTestImplementation project(":bridge-webview")
    androidTestImplementation(Libs.j2v8)
    androidTestImplementation(Libs.guava)
    kaptAndroidTest project(":compiler-webview")
    kaptAndroidTest project(":compiler-v8")

    androidTestImplementation(Libs.kotlinx_serialization_runtime)
    androidTestImplementation(Libs.junit)
    androidTestImplementation(Libs.espresso_core)
    androidTestImplementation(Libs.androidx_test_rules, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation(Libs.truth)
    androidTestImplementation(Libs.kotlintest_runner_junit4)
}

/*
 * Compile the test web app prior to assembling the androidTest app
 */
task buildTestWebApp(type: Exec) {
    workingDir '../../..'
    commandLine 'npm', 'install'
}

tasks.whenTaskAdded { task ->
    if (task.name ==~ "assemble.*AndroidTest") {
        task.dependsOn buildTestWebApp
    }
}

apply from: rootProject.file('gradle/lint.gradle')
