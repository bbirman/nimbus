buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath(Libs.com_android_tools_build_gradle)
        classpath(Libs.kotlin_gradle_plugin)
        classpath(Libs.gradle_bintray_plugin)
        classpath(Libs.dokka_gradle_plugin)
        classpath(Libs.org_jetbrains_kotlin_kotlin_serialization)
    }
}

plugins{
    id("de.fayard.buildSrcVersions") version "0.7.0"
    id("com.autonomousapps.dependency-analysis") version "0.49.0"
    id("com.jfrog.artifactory")
    id("maven-publish")
    id("com.vanniktech.android.junit.jacoco") version "0.16.0"
}
project.ext {
    if (project.hasProperty("preDexEnable")) {
        project.ext.preDexLibs = project.properties["preDexEnable"] == "true"
    } else {
        project.ext.preDexLibs = true // pre dexing should be true by default
    }

    println("PREDEX " + (project.ext.preDexLibs ? "ENABLED" : "DISABLED")) // goes to build log or console output
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url "https://dl.bintray.com/salesforce-mobile/android"
        }
    }
    group GROUP
    version VERSION
    junitJacoco {
        jacocoVersion = Versions.jacoco // type String
        ignoreProjects = [] // type String array
        excludes // type String List
        includeNoLocationClasses = false // type boolean
        includeInstrumentationCoverageInMergedReport = false // type boolean
    }
}

subprojects {
    task printPubs {
        doLast {
            if (project.hasProperty("publishing")) {
                project.publishing.publications.each { publication ->
                    println "Publication [name: $publication.name, groupId: $publication.groupId, artifactId: $publication.artifactId, version: $publication.version"
                }
            } else {
                println("No publication for project ${project.name}")
            }
        }
    }

    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin" == plugin.class.name) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

artifactory {
    contextUrl = 'http://oss.jfrog.org'
//    contextUrl = 'http://127.0.0.1:8081/artifactory'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_API_KEY')
//            username = 'admin'
//            password = 'test1234'
        }
        defaults {
            publications('mavenPublication')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}
// TODO: Move lint to plugin
// TODO: Move Dokka config to plugin
